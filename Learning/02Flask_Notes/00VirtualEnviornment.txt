ðŸ”¹ What is virtualenv?

virtualenv is a Python tool that lets you create separate environments for your projects.
Each environment has its own Python interpreter and set of installed packages, so projects donâ€™t clash with each other.

ðŸ”¹ Installing virtualenv
To install it, we use pip (Pythonâ€™s package manager).
Command:
pip install virtualenv


âœ… This downloads and installs the virtualenv package from PyPI (Python Package Index) into your system/global Python.

ðŸ”¹ Why do we need it?
Imagine youâ€™re working on two projects:
Project A needs Flask 1.1
Project B needs Flask 2.0
If you install Flask globally, one project will break when you upgrade/downgrade Flask.
ðŸ‘‰ virtualenv solves this by giving each project its own isolated environment.

ðŸ”¹ How to use virtualenv
Create a virtual environment
virtualenv myenv

This makes a folder named myenv that contains Python binaries and a local site-packages folder.
Activate the environment
Windows (PowerShell / CMD):
myenv\Scripts\activate

ðŸ‘‰ Once activated, your terminal prompt will show (myenv) at the beginning.
Install packages inside the environment
pip install flask

Packages get installed only in myenv, not globally.

Deactivate the environment
deactivate


This returns you to the systemâ€™s global Python.


ðŸ”¹ Summary
pip install virtualenv â†’ installs the tool.
virtualenv myenv â†’ creates a new environment.
activate â†’ enter the environment.
deactivate â†’ exit the environment.